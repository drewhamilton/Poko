apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: "com.google.devtools.ksp"

ext {
    artifactName = publish_compiler_plugin_artifact
    pomName = 'Poko Compiler Plugin'
    basePackage = 'dev.drewhamilton.poko'
}
apply from: '../publish.gradle'
apply from: '../info.gradle'

dependencies {
    compileOnly libs.kotlin.embeddableCompiler

    implementation(libs.autoService.annotations)
    ksp(libs.autoService.ksp)

    testImplementation(project(':poko-annotations'))
    testImplementation(libs.kotlin.embeddableCompiler)
    testImplementation(libs.kotlin.compileTestingFork)
    testImplementation(libs.junit)
    testImplementation(libs.truth)
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += ['-opt-in=kotlin.RequiresOptIn']
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes"]
    }
}

// https://jakewharton.com/build-on-latest-java-test-through-lowest-java/
(8..17).each { javaVersion ->
    def jdkTest = tasks.register("testJdk$javaVersion", Test) {
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }

        description = "Runs the test suite on JDK $javaVersion"
        group = LifecycleBasePlugin.VERIFICATION_GROUP

        def testTask = tasks.getByName("test")
        classpath = testTask.classpath
        testClassesDirs = testTask.testClassesDirs
    }
    tasks.named("check").configure { dependsOn(jdkTest) }
}

//noinspection UnnecessaryQualifiedReference
dependsOnCopyInfoTemplate(org.jetbrains.dokka.gradle.DokkaTask)
dependsOnCopyInfoTemplate(Jar)
dependsOnCopyInfoTemplate(com.google.devtools.ksp.gradle.KspTask)
