import javax.annotation.Nullable

rootProject.name = 'Poko sample'

include ":jvm"

// Compose requires Java 11; skip it on CI tests for lower JDKs
@Nullable Integer ciJavaVersion = System.getenv().get("ci_java_version")
if (ciJavaVersion == null || ciJavaVersion >= 11) {
    include ":compose"
}

apply from: "properties.gradle"
boolean isCi = System.getenv().get("CI") == "true"
if (!isCi) {
    // Use local Poko modules for non-CI builds:
    includeBuild('../.') {
        logger.lifecycle("Replacing Poko module dependencies with local projects")
        dependencySubstitution {
            substitute(module("$publish_group:$publish_compiler_plugin_artifact"))
                .using(project(':poko-compiler-plugin'))
                .because("Developers can see local changes reflected in the sample project")
            substitute(module("$publish_group:$publish_gradle_plugin_artifact"))
                .using(project(':poko-gradle-plugin'))
                .because("Developers can see local changes reflected in the sample project")
        }
    }
}

enableFeaturePreview('VERSION_CATALOGS')
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            from(files("../gradle/libs.versions.toml"))
        }
    }
}
