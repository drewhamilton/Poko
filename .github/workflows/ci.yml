name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 16
      - name: Build
        run: ./gradlew clean build publishToMavenLocal --stacktrace
        env:
          ORG_GRADLE_PROJECT_personalGpgKey: ${{ secrets.ORG_GRADLE_PROJECT_personalGpgKey }}
          ORG_GRADLE_PROJECT_personalGpgPassword: ${{ secrets.ORG_GRADLE_PROJECT_personalGpgPassword }}
      - name: Upload MavenLocal directory
        uses: actions/upload-artifact@v3
        with:
          name: MavenLocal
          path: ~/.m2/repository/dev/drewhamilton/poko/
          if-no-files-found: error

  build-sample:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        ci_compile_mode: [ use-ir-false, use-ir-true, jetpack-compose ]
        ci_java_version: [ 1.8, 11, 12, 13, 14, 15, 16 ]
        # Compose requires Java 11:
        exclude:
          - ci_compile_mode: jetpack-compose
            ci_java_version: 1.8
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install JDK ${{ matrix.ci_java_version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.ci_java_version }}
      - name: Download MavenLocal
        uses: actions/download-artifact@v3
        with:
          name: MavenLocal
          path: ~/.m2/repository/dev/drewhamilton/poko/
      - name: Build sample
        run: cd sample && ./gradlew build --stacktrace -Pcompile_mode=${{ matrix.ci_compile_mode }}

env:
  GRADLE_OPTS: >-
    -Dorg.gradle.configureondemand=true
    -Dkotlin.incremental=false
    -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"
